blogdown::serve_site()
install.packages('blogdown')
install.packages('blogdown')
install.packages("blogdown")
install.packages("blogdown")
blogdown::serve_site()
blogdown::serve_site()
install.packages("blogdown")
library(plyr)
library(ggplot2)
library(fixest)
library(crayon)
rm(list = ls())
wd = "/Users/gloria/Dropbox (PP)/Twitter_suspensions/working_directory"
source(paste0(wd, "/code/2_analysis/00_hyperparms.R"))
wd.out = paste0(wd, "/output/stacked")
files = list.files(wd.out, "outpr_lagged_*csv")
files
files = list.files(wd.out, "outpr_lagged_")
files
container = readxl::read_excel( paste0(wd.out, files[0]))
container = readxl::read_excel( paste0(wd.out, '/', files[0]))
files[0]
files
print("+++ Disaggregated Analysis: Plot +++")
container = readxl::read_excel(paste0(wd.out, '/', files[1]))
container
container = readxl::read_excel(paste0(wd.out, '/', files[1]), col_names = T)
container
??read_excel
container = readxl::read_excel(paste0(wd.out, '/', files[1]), col_names = T) %>% as.data.frame()
container
View(container)
container = readxl::read_excel(paste0(wd.out, '/', files[1]), col_names = T) %>% as.data.frame()
temp = container[-1,]
View(temp)
temp = temp[order(temp$lag),]
temp$ordering = 1:nrow(temp)
# plot the results
ggplot(data = temp, mapping = aes(x=coef, y=ordering))+
geom_point() +
geom_errorbarh(aes(xmin = coef-1.96*se, xmax = coef+1.96*se)) +
# add in a dotted line at zero
geom_vline(xintercept = 0, lty = 2) +
labs(
x = "Effect Estimates",
y = "Events",
title = paste0(outvars[n], ", by event, 3-day bins")
)
# plot the results
ggplot(data = temp, mapping = aes(x=coef, y=ordering))+
geom_point() +
geom_errorbarh(aes(xmin = coef-1.96*se, xmax = coef+1.96*se)) +
# add in a dotted line at zero
geom_vline(xintercept = 0, lty = 2) +
labs(
x = "Effect Estimates",
y = "Events",
title = paste0(", by event, 3-day bins")
)
# plot the results
ggplot(data = temp, mapping = aes(x=beta, y=ordering))+
geom_point() +
geom_errorbarh(aes(xmin = beta-1.96*se, xmax = beta+1.96*se)) +
# add in a dotted line at zero
geom_vline(xintercept = 0, lty = 2) +
labs(
x = "Effect Estimates",
y = "Events",
title = paste0(", by event, 3-day bins")
)
# plot the results
ggplot(data = temp, mapping = aes(x= ordering, y= beta))+
geom_point() +
geom_errorbarh(aes(ymin = beta-1.96*se, ymax = beta+1.96*se)) +
# add in a dotted line at zero
geom_vline(yintercept = 0, lty = 2) +
labs(
x = "Effect Estimates",
y = "Events",
title = paste0(", by event, 3-day bins")
)
# plot the results
ggplot(data = temp, mapping = aes(x= ordering, y= beta))+
geom_point() +
geom_errorbarv(aes(ymin = beta-1.96*se, ymax = beta+1.96*se)) +
# add in a dotted line at zero
geom_vline(yintercept = 0, lty = 2) +
labs(
x = "Effect Estimates",
y = "Events",
title = paste0(", by event, 3-day bins")
)
# plot the results
ggplot(data = temp, mapping = aes(x= ordering, y= beta))+
geom_point() +
geom_errorbar(aes(ymin = beta-1.96*se, ymax = beta+1.96*se)) +
# add in a dotted line at zero
geom_vline(yintercept = 0, lty = 2) +
labs(
x = "Effect Estimates",
y = "Events",
title = paste0(", by event, 3-day bins")
)
# plot the results
ggplot(data = temp, mapping = aes(x= ordering, y= beta))+
geom_point() +
geom_errorbar(aes(ymin = beta-1.96*se, ymax = beta+1.96*se)) +
# add in a dotted line at zero
geom_hline(yintercept = 0, lty = 2) +
labs(
x = "Effect Estimates",
y = "Events",
title = paste0(", by event, 3-day bins")
)
# plot the results
ggplot(data = temp, mapping = aes(x= lag, y= beta))+
geom_point() +
geom_errorbar(aes(ymin = beta-1.96*se, ymax = beta+1.96*se)) +
# add in a dotted line at zero
geom_hline(yintercept = 0, lty = 2) +
labs(
x = "Effect Estimates",
y = "Events",
title = paste0(", by event, 3-day bins")
)
temp$lag = as.factor(temp$lag, temp$ordering)
?? as.factor
temp$lag = as.factor(temp$lag, levels = temp$ordering)
temp$lag = factor(temp$lag, levels = temp$ordering)
# plot the results
ggplot(data = temp, mapping = aes(x= lag, y= beta))+
geom_point() +
geom_errorbar(aes(ymin = beta-1.96*se, ymax = beta+1.96*se)) +
# add in a dotted line at zero
geom_hline(yintercept = 0, lty = 2) +
labs(
x = "Effect Estimates",
y = "Events",
title = paste0(", by event, 3-day bins")
)
View(temp)
container = readxl::read_excel(paste0(wd.out, '/', files[1]), col_names = T) %>% as.data.frame()
temp = container[-1,]
temp = temp[order(temp$lag),]
temp$ordering = 1:nrow(temp)
temp$lag = factor(temp$lag, levels = temp$ordering)
View(temp)
container = readxl::read_excel(paste0(wd.out, '/', files[1]), col_names = T) %>% as.data.frame()
temp = container[-1,]
temp = temp[order(temp$lag),]
temp$ordering = 1:nrow(temp)
# plot the results
ggplot(data = temp, mapping = aes(x= lag, y= beta))+
geom_point() +
geom_errorbar(aes(ymin = beta-1.96*se, ymax = beta+1.96*se)) +
# add in a dotted line at zero
geom_hline(yintercept = 0, lty = 2) +
labs(
x = "Effect Estimates",
y = "Events",
title = paste0(", by event, 3-day bins")
)
files[1]
files = list.files(wd.out, "outpr_lagged_")
for (n in 1:length(outvars)){
container = readxl::read_excel(paste0(wd.out, '/', files[1]), col_names = T) %>% as.data.frame()
temp = container[-1,]
temp = temp[order(temp$lag),]
temp$ordering = 1:nrow(temp)
# plot the results
plot = ggplot(data = temp, mapping = aes(x= lag, y= beta))+
geom_point() +
geom_errorbar(aes(ymin = beta-1.96*se, ymax = beta+1.96*se)) +
# add in a dotted line at zero
geom_hline(yintercept = 0, lty = 2) +
labs(
x = "Effect Estimates",
y = "Events",
title = paste0(files[1] ", by event, 3-day bins")
files[1]
for (n in 1:length(files)){
container = readxl::read_excel(paste0(wd.out, '/', files[n]), col_names = T) %>% as.data.frame()
temp = container[-1,]
temp = temp[order(temp$lag),]
temp$ordering = 1:nrow(temp)
# plot the results
plot = ggplot(data = temp, mapping = aes(x= lag, y= beta))+
geom_point() +
geom_errorbar(aes(ymin = beta-1.96*se, ymax = beta+1.96*se)) +
# add in a dotted line at zero
geom_hline(yintercept = 0, lty = 2) +
labs(
x = "Effect Estimates",
y = "Events",
title = paste0(files[n] , ", by event, 3-day bins")
)
print(plot)
# ggsave(paste0(wd.out, "/by_events_bins_balanced_", outvars[n],  ".pdf"))
}
##############################################################################
#
# Twitter suspensions main analysis: TOXICITY
#
# Stacked designs - with binned data
#
##############################################################################
library(plyr)
library(ggplot2)
library(crayon)
rm(list = ls())
wd = "/Users/gloria/Dropbox (PP)/Twitter_suspensions/working_directory"
source(paste0(wd, "/code/2_analysis/00_hyperparms.R"))
wd.out = paste0(wd, "/output/stacked")
#### Plot
files = list.files(wd.out, "outpr_nol")
for (n in 1:length(files)){
container = readxl::read_excel(paste0(wd.out, '/', files[n]), col_names = T) %>% as.data.frame()
temp = container[-1,]
temp = temp[order(temp$lag),]
temp$ordering = 1:nrow(temp)
# plot the results
plot = ggplot(data = temp, mapping = aes(x= lag, y= beta))+
geom_point() +
geom_errorbar(aes(ymin = beta-1.96*se, ymax = beta+1.96*se)) +
# add in a dotted line at zero
geom_hline(yintercept = 0, lty = 2) +
labs(
x = "Effect Estimates",
y = "Events",
title = paste0(files[n] , ", by event, 3-day bins")
)
print(plot)
# ggsave(paste0(wd.out, "/by_events_bins_balanced_", outvars[n],  ".pdf"))
}
##############################################################################
#
# Twitter suspensions main analysis: TOXICITY
#
# Stacked designs - with binned data
#
##############################################################################
library(plyr)
library(ggplot2)
library(crayon)
rm(list = ls())
wd = "/Users/gloria/Dropbox (PP)/Twitter_suspensions/working_directory"
source(paste0(wd, "/code/2_analysis/00_hyperparms.R"))
wd.out = paste0(wd, "/output/stacked")
#### Plot
files = list.files(wd.out, "outpr_nol")
for (n in 1:length(files)){
container = readxl::read_excel(paste0(wd.out, '/', files[n]), col_names = T) %>% as.data.frame()
temp = container[-1,]
temp = temp[order(temp$lag),]
temp$ordering = 1:nrow(temp)
# plot the results
plot = ggplot(data = temp, mapping = aes(x= lag, y= beta))+
geom_point() +
geom_errorbar(aes(ymin = beta-1.96*se, ymax = beta+1.96*se)) +
# add in a dotted line at zero
geom_hline(yintercept = 0, lty = 2) +
labs(
x = "Effect Estimates",
y = "Events",
title = paste0(files[n] , ", by event, 3-day bins")
)
print(plot)
# ggsave(paste0(wd.out, "/by_events_bins_balanced_", outvars[n],  ".pdf"))
}
##############################################################################
#
# Twitter suspensions main analysis: TOXICITY
#
# Stacked designs - with binned data
#
##############################################################################
library(plyr)
library(ggplot2)
library(crayon)
rm(list = ls())
wd = "/Users/gloria/Dropbox (PP)/Twitter_suspensions/working_directory"
source(paste0(wd, "/code/2_analysis/00_hyperparms.R"))
wd.out = paste0(wd, "/output/stacked")
#### Plot
files = list.files(wd.out, "outpr_lag")
for (n in 1:length(files)){
container = readxl::read_excel(paste0(wd.out, '/', files[n]), col_names = T) %>% as.data.frame()
temp = container[-1,]
temp = temp[order(temp$lag),]
temp$ordering = 1:nrow(temp)
# plot the results
plot = ggplot(data = temp, mapping = aes(x= lag, y= beta))+
geom_point() +
geom_errorbar(aes(ymin = beta-1.96*se, ymax = beta+1.96*se)) +
# add in a dotted line at zero
geom_hline(yintercept = 0, lty = 2) +
labs(
x = "Effect Estimates",
y = "Events",
title = paste0(files[n] , ", by event, 3-day bins")
)
print(plot)
# ggsave(paste0(wd.out, "/by_events_bins_balanced_", outvars[n],  ".pdf"))
}
##############################################################################
#
# Twitter suspensions main analysis: TOXICITY
#
# Stacked designs - with binned data
#
##############################################################################
library(plyr)
library(ggplot2)
library(crayon)
rm(list = ls())
wd = "/Users/gloria/Dropbox (PP)/Twitter_suspensions/working_directory"
source(paste0(wd, "/code/2_analysis/00_hyperparms.R"))
wd.out = paste0(wd, "/output/stacked")
#### Plot
files = list.files(wd.out, "outpr_lag")
for (n in 1:length(files)){
container = readxl::read_excel(paste0(wd.out, '/', files[n]), col_names = T) %>% as.data.frame()
temp = container[-1,]
temp = temp[order(temp$lag),]
temp$ordering = 1:nrow(temp)
# plot the results
plot = ggplot(data = temp, mapping = aes(x= lag, y= beta))+
geom_point() +
geom_errorbar(aes(ymin = beta-1.96*se, ymax = beta+1.96*se)) +
# add in a dotted line at zero
geom_hline(yintercept = 0, lty = 2) +
labs(
x = "Effect Estimates",
y = "Events",
title = paste0(files[n] , ", by event, 3-day bins")
)
print(plot)
# ggsave(paste0(wd.out, "/by_events_bins_balanced_", outvars[n],  ".pdf"))
}
